from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters
import re

# üîê –¢–æ–∫–µ–Ω –æ—Ç BotFather (–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –∫–æ–¥–µ)
TOKEN = "7934050267:AAGteJFHVm1108ffap66G84dXIsVQUWSfUo"

# ‚ùå –ü–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
BAD_WORDS = ["–º–∞—Ç1", "–º–∞—Ç2", "–ø–ª–æ—Ö–æ–µ", "—Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ"]

# üîó –®–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫
URL_PATTERN = r"(http[s]?://|t\.me|telegram\.me|www\.)"

async def censor(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        text = update.message.text.lower()

        has_bad_word = any(word in text for word in BAD_WORDS)
        has_link = re.search(URL_PATTERN, text)

        if has_bad_word or has_link:
            try:
                await update.message.delete()
                print(f"–£–¥–∞–ª–µ–Ω–æ: {update.message.text}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, censor))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()
